apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: statefulset-agent
  labels:
        type: stateful-service-ctmag-srv
spec:
    serviceName: ctmag
    selector:
        matchLabels:
            type: stateful-service-ctmag-srv
    replicas: {{ .Values.controlM.agent.replicas }} # number of running agents
    template:
        metadata:
            labels:
                type: stateful-service-ctmag-srv
        spec:
          containers:
          - name: ctmagent-container
            # container in ECR
            image: {{ .Values.controlM.agent.image }}
            env:
            - name: PERSISTENT_VOL
              value: "{{ .Values.controlM.volumePath }}"
            - name: CTM_SERVER_NAME
              # update value to your Control-M/Server name
              value: {{ .Values.controlM.serverName }}
            - name: CTM_AGPORT
              value: "{{ .Values.controlM.agent.agport }}"
            - name: AAPI_END_POINT
              # update value to your AAPI end point
              value: "{{ .Values.controlM.api.endpoint }}"
            - name: AAPI_USER
              valueFrom:
                secretKeyRef:
                  name: controlmusercreds
                  key: AAPI_USER
            - name: AAPI_PASS
              valueFrom:
                secretKeyRef:
                  name: controlmusercreds
                  key: AAPI_PASS
            imagePullPolicy: {{ .Values.controlM.agent.pullPolicy }}
            ports:
            - containerPort: {{ .Values.controlM.agent.agport }}
            volumeMounts:
              - name: pv-data
                mountPath: "{{ .Values.controlM.volumePath }}"
          terminationGracePeriodSeconds: 10
    #      This sample is pulling the container from ECR. DockerHub is using imagePullSecret
    #      imagePullSecrets:
    #      - name: regcred
    #     See example_RBC.yaml for sample RBC Configuration
          serviceAccountName: statefulset-agent
          securityContext:
            # the agent account gid so it will be able to access the PV
            fsGroup: 1000
          volumes:
            - name: pv-data
              persistentVolumeClaim:
                claimName: agent-pvc
