{"version":3,"file":"index.js","sources":["../src/babel-utils.js","../src/source-map.js","../src/css-prop.js","../src/macro.js","../src/macro-styled.js","../src/index.js"],"sourcesContent":["// @flow\nimport nodePath from 'path'\nimport { hashArray } from './index'\nimport type { BabelPath, EmotionBabelPluginPass } from './index'\nimport type { Types, Identifier } from 'babel-flow-types'\n\nexport { getLabelFromPath as getIdentifierName } from '@emotion/babel-utils'\n\nfunction cloneNode(t: any, node) {\n  return (typeof t.cloneNode === 'function' ? t.cloneNode : t.cloneDeep)(node)\n}\n\nexport function getRuntimeImportPath(path: BabelPath, t: Types) {\n  // $FlowFixMe\n  const binding = path.scope.getBinding(path.node.name)\n  if (!t.isImportDeclaration(binding.path.parentPath)) {\n    throw binding.path.buildCodeFrameError(\n      'the emotion macro must be imported with es modules'\n    )\n  }\n  const importPath = binding.path.parentPath.node.source.value\n  return importPath.match(/(.*)\\/macro/)[1]\n}\n\ntype EmotionMacroPluginPass = EmotionBabelPluginPass & {\n  emotionImports: void | {\n    [key: string]: {\n      [key: string]: Identifier\n    }\n  }\n}\n\nexport function buildMacroRuntimeNode(\n  path: BabelPath,\n  state: EmotionMacroPluginPass,\n  importName: string,\n  t: Types\n): Identifier {\n  const runtimeImportPath = getRuntimeImportPath(path, t)\n  if (state.emotionImports === undefined) state.emotionImports = {}\n  if (state.emotionImports[runtimeImportPath] === undefined) {\n    state.emotionImports[runtimeImportPath] = {}\n  }\n  if (state.emotionImports[runtimeImportPath][importName] === undefined) {\n    // $FlowFixMe\n    state.emotionImports[runtimeImportPath][\n      importName\n    ] = path.scope.generateUidIdentifier(path.node.name)\n  }\n  // $FlowFixMe\n  return cloneNode(t, state.emotionImports[runtimeImportPath][importName])\n}\n\nexport function addRuntimeImports(state: EmotionMacroPluginPass, t: Types) {\n  if (state.emotionImports) {\n    const emotionImports = state.emotionImports\n    Object.keys(emotionImports).forEach(importPath => {\n      const importSpecifiers = []\n      Object.keys(emotionImports[importPath]).forEach(importName => {\n        const identifier = emotionImports[importPath][importName]\n        if (importName === 'default') {\n          importSpecifiers.push(t.importDefaultSpecifier(identifier))\n        } else {\n          importSpecifiers.push(\n            t.importSpecifier(identifier, t.identifier(importName))\n          )\n        }\n      })\n      // $FlowFixMe\n      state.file.path.node.body.unshift(\n        t.importDeclaration(importSpecifiers, t.stringLiteral(importPath))\n      )\n    })\n    state.emotionImports = undefined\n  }\n}\nexport function getName(identifierName?: string, prefix: string) {\n  const parts = []\n  parts.push(prefix)\n  if (identifierName) {\n    parts.push(identifierName)\n  }\n  return parts.join('-')\n}\n\nexport function getLabel(\n  identifierName?: string,\n  autoLabel: boolean,\n  labelFormat?: string,\n  filename: string\n) {\n  if (!identifierName || !autoLabel) return null\n  if (!labelFormat) return identifierName.trim()\n\n  const parsedPath = nodePath.parse(filename)\n  const normalizedFilename = parsedPath.name.replace('.', '-')\n  return labelFormat\n    .replace(/\\[local\\]/gi, identifierName.trim())\n    .replace(/\\[filename\\]/gi, normalizedFilename)\n}\n\nexport function createRawStringFromTemplateLiteral(quasi: {\n  quasis: Array<{ value: { cooked: string } }>\n}) {\n  let strs = quasi.quasis.map(x => x.value.cooked)\n  let hash = hashArray([...strs])\n\n  const src = strs\n    .reduce((arr, str, i) => {\n      arr.push(str)\n      if (i !== strs.length - 1) {\n        arr.push(`xxx${i}xxx`)\n      }\n      return arr\n    }, [])\n    .join('')\n    .trim()\n  return { src, hash }\n}\n\nexport function omit(\n  obj: { [string]: any },\n  testFn: (key: string, obj: any) => boolean\n) {\n  let target: { [string]: any } = {}\n  let i: string\n  for (i in obj) {\n    if (!testFn(i, obj)) continue\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue\n    target[i] = obj[i]\n  }\n  return target\n}\n\nexport { appendStringToExpressions } from '@emotion/babel-utils'\n","// @flow\nimport { SourceMapGenerator } from 'source-map'\nimport convert from 'convert-source-map'\nimport type { EmotionBabelPluginPass } from './index'\nimport type { BabelFile } from 'babel-flow-types'\n\nfunction getGeneratorOpts(file) {\n  return file.opts.generatorOpts ? file.opts.generatorOpts : file.opts\n}\n\nexport function makeSourceMapGenerator(file: BabelFile) {\n  const generatorOpts = getGeneratorOpts(file)\n  const filename = generatorOpts.sourceFileName\n  const generator = new SourceMapGenerator({\n    file: filename,\n    sourceRoot: generatorOpts.sourceRoot\n  })\n\n  generator.setSourceContent(filename, file.code)\n  return generator\n}\n\nexport function addSourceMaps(\n  offset: { line: number, column: number },\n  state: EmotionBabelPluginPass\n) {\n  const generator = makeSourceMapGenerator(state.file)\n  const generatorOpts = getGeneratorOpts(state.file)\n  generator.addMapping({\n    generated: {\n      line: 1,\n      column: 0\n    },\n    source: generatorOpts.sourceFileName,\n    original: offset\n  })\n  return convert.fromObject(generator).toComment({ multiline: true })\n}\n","// @flow\nimport { addNamed } from '@babel/helper-module-imports'\nimport { addSourceMaps } from './source-map'\nimport type { BabelPath, EmotionBabelPluginPass } from './index'\nimport type { Types } from 'babel-flow-types'\n\nexport default function(\n  path: BabelPath,\n  state: EmotionBabelPluginPass,\n  t: Types\n) {\n  let cssPath\n  let classNamesPath\n\n  path.get('attributes').forEach(openElPath => {\n    if (t.isJSXSpreadAttribute(openElPath.node)) {\n      return\n    }\n\n    const attrPath = openElPath.get('name')\n    const name = attrPath.node.name\n\n    if (name === state.importedNames.css) {\n      cssPath = attrPath\n    }\n\n    if (name === 'className') {\n      classNamesPath = attrPath\n    }\n  })\n\n  if (!cssPath) return\n\n  let cssPropValue = cssPath.container && cssPath.container.value\n  let classNamesValue =\n    classNamesPath && classNamesPath.container && classNamesPath.container.value\n\n  if (t.isJSXExpressionContainer(cssPropValue)) {\n    cssPropValue = cssPropValue.expression\n  }\n\n  let cssTemplateExpression\n  if (t.isTemplateLiteral(cssPropValue)) {\n    cssTemplateExpression = createCssTemplateExpression(cssPropValue)\n  } else if (t.isStringLiteral(cssPropValue)) {\n    cssTemplateExpression = createCssTemplateExpression(\n      t.templateLiteral(\n        [\n          t.templateElement({\n            raw: cssPropValue.value,\n            cooked: cssPropValue.value\n          })\n        ],\n        []\n      )\n    )\n  } else {\n    const args = state.opts.sourceMap\n      ? [\n          cssPropValue,\n          t.stringLiteral(addSourceMaps(cssPath.node.loc.start, state))\n        ]\n      : [cssPropValue]\n    cssTemplateExpression = t.callExpression(getCssIdentifer(), args)\n  }\n  if (\n    !classNamesValue ||\n    (t.isStringLiteral(classNamesValue) && !classNamesValue.value)\n  ) {\n    if (classNamesPath) classNamesPath.parentPath.remove()\n    cssPath.parentPath.replaceWith(createClassNameAttr(cssTemplateExpression))\n    return\n  }\n\n  cssPath.parentPath.remove()\n  if (classNamesPath && classNamesPath.parentPath) {\n    if (t.isJSXExpressionContainer(classNamesValue)) {\n      const args = [\n        add(\n          cssTemplateExpression,\n          add(t.stringLiteral(' '), classNamesValue.expression)\n        )\n      ]\n\n      if (state.opts.sourceMap) {\n        args.push(t.stringLiteral(addSourceMaps(cssPath.node.loc.start, state)))\n      }\n\n      classNamesPath.parentPath.replaceWith(\n        createClassNameAttr(t.callExpression(getMergeIdentifier(), args))\n      )\n    } else {\n      classNamesPath.parentPath.replaceWith(\n        createClassNameAttr(\n          add(\n            cssTemplateExpression,\n            t.stringLiteral(` ${classNamesValue.value || ''}`)\n          )\n        )\n      )\n    }\n  }\n\n  function add(a, b) {\n    return t.binaryExpression('+', a, b)\n  }\n\n  function createClassNameAttr(expression) {\n    return t.jSXAttribute(\n      t.jSXIdentifier('className'),\n      t.jSXExpressionContainer(expression)\n    )\n  }\n\n  function getCssIdentifer() {\n    if (state.opts.autoImportCssProp !== false) {\n      const cssImport = addNamed(path, 'css', state.emotionImportPath)\n      state.cssPropIdentifiers.push(cssImport)\n      return cssImport\n    } else {\n      return t.identifier(state.importedNames.css)\n    }\n  }\n  function getMergeIdentifier() {\n    if (state.opts.autoImportCssProp !== false) {\n      return addNamed(path, 'merge', state.emotionImportPath)\n    } else {\n      return t.identifier(state.importedNames.merge)\n    }\n  }\n  function createCssTemplateExpression(templateLiteral) {\n    return t.taggedTemplateExpression(getCssIdentifer(), templateLiteral)\n  }\n}\n","// @flow\nimport { replaceCssWithCallExpression } from './index'\nimport { buildMacroRuntimeNode, addRuntimeImports } from './babel-utils'\nimport { createMacro } from 'babel-plugin-macros'\n\nexport default createMacro(macro)\n\nfunction macro({ references, state, babel: { types: t } }) {\n  Object.keys(references).forEach(referenceKey => {\n    let isPure = true\n    switch (referenceKey) {\n      case 'injectGlobal': {\n        isPure = false\n      }\n      // eslint-disable-next-line no-fallthrough\n      case 'css':\n      case 'keyframes': {\n        references[referenceKey].reverse().forEach(reference => {\n          const path = reference.parentPath\n          const runtimeNode = buildMacroRuntimeNode(\n            reference,\n            state,\n            referenceKey,\n            t\n          )\n          if (t.isTaggedTemplateExpression(path)) {\n            replaceCssWithCallExpression(\n              path,\n              runtimeNode,\n              state,\n              t,\n              undefined,\n              !isPure\n            )\n          } else {\n            if (isPure) {\n              path.addComment('leading', '#__PURE__')\n            }\n            reference.replaceWith(runtimeNode)\n          }\n        })\n        break\n      }\n      default: {\n        references[referenceKey].reverse().forEach(reference => {\n          reference.replaceWith(\n            buildMacroRuntimeNode(reference, state, referenceKey, t)\n          )\n        })\n      }\n    }\n  })\n  addRuntimeImports(state, t)\n}\n","// @flow\nimport {\n  buildStyledCallExpression,\n  buildStyledObjectCallExpression\n} from './index'\nimport { buildMacroRuntimeNode, omit } from './babel-utils'\nimport emotionMacro from './macro'\nimport { createMacro } from 'babel-plugin-macros'\n\nexport default createMacro(macro)\n\nfunction macro(options) {\n  const { references, state, babel: { types: t } } = options\n  let referencesWithoutDefault = references\n  if (references.default) {\n    referencesWithoutDefault = omit(references, key => key !== 'default')\n    references.default.reverse().forEach(styledReference => {\n      const path = styledReference.parentPath.parentPath\n      const runtimeNode = buildMacroRuntimeNode(\n        styledReference,\n        state,\n        'default',\n        t\n      )\n      if (t.isTemplateLiteral(path.node.quasi)) {\n        if (t.isMemberExpression(path.node.tag)) {\n          path.replaceWith(\n            buildStyledCallExpression(\n              runtimeNode,\n              [t.stringLiteral(path.node.tag.property.name)],\n              path,\n              state,\n              false,\n              t\n            )\n          )\n        } else if (t.isCallExpression(path.node.tag)) {\n          path.replaceWith(\n            buildStyledCallExpression(\n              runtimeNode,\n              path.node.tag.arguments,\n              path,\n              state,\n              true,\n              t\n            )\n          )\n        }\n      } else if (\n        t.isCallExpression(path) &&\n        (t.isCallExpression(path.node.callee) ||\n          t.isIdentifier(path.node.callee.object))\n      ) {\n        path.replaceWith(\n          buildStyledObjectCallExpression(path, state, runtimeNode, t)\n        )\n      }\n    })\n  }\n  emotionMacro({ ...options, references: referencesWithoutDefault })\n}\n","// @flow\nimport fs from 'fs'\nimport nodePath from 'path'\nimport findRoot from 'find-root'\nimport mkdirp from 'mkdirp'\nimport { touchSync } from 'touch'\nimport { addSideEffect } from '@babel/helper-module-imports'\nimport {\n  getIdentifierName,\n  getName,\n  createRawStringFromTemplateLiteral,\n  getLabel,\n  appendStringToExpressions\n} from './babel-utils'\nimport type {\n  Node,\n  Identifier,\n  BabelPluginPass,\n  Types,\n  Babel\n} from 'babel-flow-types'\nimport hashString from '@emotion/hash'\nimport Stylis from '@emotion/stylis'\nimport memoize from '@emotion/memoize'\nimport { addSourceMaps } from './source-map'\n\nimport cssProps from './css-prop'\nimport { getExpressionsFromTemplateLiteral } from '@emotion/babel-utils'\nimport emotionMacro from './macro'\nimport styledMacro from './macro-styled'\n\nexport const macros = {\n  emotion: emotionMacro,\n  styled: styledMacro\n}\n\nexport type BabelPath = any\n\nexport function hashArray(arr: Array<string>) {\n  return hashString(arr.join(''))\n}\n\nconst staticStylis = new Stylis({ keyframe: false })\n\nexport function hoistPureArgs(path: BabelPath) {\n  const args = path.get('arguments')\n\n  if (args && Array.isArray(args)) {\n    args.forEach(arg => {\n      if (!arg.isIdentifier() && arg.isPure()) {\n        arg.hoist()\n      }\n    })\n  }\n}\n\ntype ImportedNames = {\n  css: string,\n  keyframes: string,\n  injectGlobal: string,\n  styled: string,\n  merge: string\n}\n\nexport type EmotionBabelPluginPass = BabelPluginPass & {\n  extractStatic: boolean,\n  insertStaticRules: (rules: Array<string>) => void,\n  emotionImportPath: string,\n  staticRules: Array<string>,\n  cssPropIdentifiers: Array<Identifier>,\n  importedNames: ImportedNames,\n  count: number,\n  opts: any\n}\n\nexport function replaceCssWithCallExpression(\n  path: BabelPath,\n  identifier: Identifier,\n  state: EmotionBabelPluginPass,\n  t: Types,\n  staticCSSSrcCreator: (\n    src: string,\n    name: string,\n    hash: string\n  ) => string = src => src,\n  removePath: boolean = false,\n  staticCSSSelectorCreator: (name: string, hash: string) => string = (\n    name,\n    hash\n  ) => `.${name}-${hash}`\n) {\n  try {\n    let { hash, src } = createRawStringFromTemplateLiteral(path.node.quasi)\n    const identifierName = getIdentifierName(path, t)\n    const name = getName(identifierName, 'css')\n\n    if (state.extractStatic && !path.node.quasi.expressions.length) {\n      const staticCSSRules = staticStylis(\n        staticCSSSelectorCreator(name, hash),\n        staticCSSSrcCreator(src, name, hash)\n      )\n      state.insertStaticRules([staticCSSRules])\n      if (!removePath) {\n        return path.replaceWith(t.stringLiteral(`${name}-${hash}`))\n      }\n      return path.replaceWith(t.identifier('undefined'))\n    }\n\n    if (!removePath) {\n      path.addComment('leading', '#__PURE__')\n    }\n\n    let stringToAppend = ''\n    if (state.opts.sourceMap === true && path.node.quasi.loc !== undefined) {\n      stringToAppend += addSourceMaps(path.node.quasi.loc.start, state)\n    }\n\n    const label = getLabel(\n      identifierName,\n      state.opts.autoLabel,\n      state.opts.labelFormat,\n      state.file.opts.filename\n    )\n\n    if (label) {\n      stringToAppend += `label:${label};`\n    }\n\n    path.replaceWith(\n      t.callExpression(\n        identifier,\n        appendStringToExpressions(\n          getExpressionsFromTemplateLiteral(path.node.quasi, t),\n          stringToAppend,\n          t\n        )\n      )\n    )\n\n    if (state.opts.hoist) {\n      hoistPureArgs(path)\n    }\n\n    return\n  } catch (e) {\n    if (path) {\n      throw path.buildCodeFrameError(e)\n    }\n\n    throw e\n  }\n}\n\nconst unsafeRequire = require\n\nconst getPackageRootPath = memoize(filename => findRoot(filename))\n\nfunction buildTargetObjectProperty(path, state, t) {\n  if (state.count === undefined) {\n    state.count = 0\n  }\n\n  const filename = state.file.opts.filename\n\n  // normalize the file path to ignore folder structure\n  // outside the current node project and arch-specific delimiters\n  let moduleName = ''\n  let rootPath = filename\n\n  try {\n    rootPath = getPackageRootPath(filename)\n    moduleName = unsafeRequire(rootPath + '/package.json').name\n  } catch (err) {}\n\n  const finalPath = filename === rootPath ? '' : filename.slice(rootPath.length)\n\n  const positionInFile = state.count++\n\n  const stuffToHash = [moduleName]\n\n  if (finalPath) {\n    stuffToHash.push(nodePath.normalize(finalPath))\n  } else {\n    stuffToHash.push(state.file.code)\n  }\n\n  const stableClassName = `e${hashArray(stuffToHash)}${positionInFile}`\n\n  return t.objectProperty(\n    t.identifier('target'),\n    t.stringLiteral(stableClassName)\n  )\n}\n\nconst buildFinalOptions = (t, options, ...newProps) => {\n  let existingProperties = []\n\n  if (options && !t.isObjectExpression(options)) {\n    console.warn(\n      \"Second argument to a styled call is not an object, it's going to be removed.\"\n    )\n  } else if (options) {\n    // $FlowFixMe\n    existingProperties = options.properties\n  }\n\n  return t.objectExpression([\n    ...existingProperties,\n    ...newProps.filter(Boolean)\n  ])\n}\n\nexport function buildStyledCallExpression(\n  identifier: Identifier,\n  args: Node[],\n  path: BabelPath,\n  state: EmotionBabelPluginPass,\n  isCallExpression: boolean,\n  t: Types\n) {\n  // unpacking \"manually\" to prevent array out of bounds access (deopt)\n  const tag = args[0]\n  const options = args.length >= 2 ? args[1] : null\n  const restArgs = args.slice(2)\n\n  const identifierName = getIdentifierName(path, t)\n\n  const targetProperty = buildTargetObjectProperty(path, state, t)\n\n  if (state.extractStatic && !path.node.quasi.expressions.length) {\n    const { hash, src } = createRawStringFromTemplateLiteral(path.node.quasi)\n    const staticClassName = `css-${hash}`\n    const staticCSSRules = staticStylis(`.${staticClassName}`, src)\n\n    state.insertStaticRules([staticCSSRules])\n\n    const finalOptions = buildFinalOptions(\n      t,\n      options,\n      t.objectProperty(t.identifier('e'), t.stringLiteral(staticClassName)),\n      targetProperty\n    )\n\n    return t.callExpression(\n      // $FlowFixMe\n      t.callExpression(identifier, [tag, finalOptions, ...restArgs]),\n      []\n    )\n  }\n\n  path.addComment('leading', '#__PURE__')\n\n  let stringToAppend = ''\n\n  if (state.opts.sourceMap === true && path.node.quasi.loc !== undefined) {\n    stringToAppend += addSourceMaps(path.node.quasi.loc.start, state)\n  }\n\n  let labelProperty\n\n  const label = getLabel(\n    identifierName,\n    state.opts.autoLabel,\n    state.opts.labelFormat,\n    state.file.opts.filename\n  )\n\n  if (label) {\n    labelProperty = t.objectProperty(\n      t.identifier('label'),\n      t.stringLiteral(label)\n    )\n  }\n\n  const finalOptions = buildFinalOptions(\n    t,\n    options,\n    labelProperty,\n    targetProperty\n  )\n\n  let styledCall =\n    t.isStringLiteral(tag) &&\n    !isCallExpression &&\n    // $FlowFixMe\n    tag.value[0] !== tag.value[0].toLowerCase()\n      ? // $FlowFixMe\n        t.memberExpression(identifier, t.identifier(tag.value))\n      : // $FlowFixMe\n        t.callExpression(identifier, [tag, finalOptions, ...restArgs])\n\n  return t.callExpression(\n    styledCall,\n    appendStringToExpressions(\n      getExpressionsFromTemplateLiteral(path.node.quasi, t),\n      stringToAppend,\n      t\n    )\n  )\n}\n\nexport function buildStyledObjectCallExpression(\n  path: BabelPath,\n  state: EmotionBabelPluginPass,\n  identifier: Identifier,\n  t: Types\n) {\n  const targetProperty = buildTargetObjectProperty(path, state, t)\n  const identifierName = getIdentifierName(path, t)\n\n  const tag = t.isCallExpression(path.node.callee)\n    ? path.node.callee.arguments[0]\n    : t.stringLiteral(path.node.callee.property.name)\n  let isCallExpression = t.isCallExpression(path.node.callee)\n  let styledOptions = null\n  let restStyledArgs = []\n  if (t.isCallExpression(path.node.callee)) {\n    const styledArgs = path.node.callee.arguments\n\n    if (styledArgs.length >= 2) {\n      styledOptions = styledArgs[1]\n    }\n\n    restStyledArgs = styledArgs.slice(2)\n  }\n\n  let args = path.node.arguments\n  if (state.opts.sourceMap === true && path.node.loc !== undefined) {\n    args.push(t.stringLiteral(addSourceMaps(path.node.loc.start, state)))\n  }\n\n  const label = getLabel(\n    identifierName,\n    state.opts.autoLabel,\n    state.opts.labelFormat,\n    state.file.opts.filename\n  )\n\n  const labelProperty = label\n    ? t.objectProperty(t.identifier('label'), t.stringLiteral(label))\n    : null\n\n  path.addComment('leading', '#__PURE__')\n\n  let styledCall =\n    t.isStringLiteral(tag) &&\n    !isCallExpression &&\n    tag.value[0] !== tag.value[0].toLowerCase()\n      ? t.memberExpression(identifier, t.identifier(tag.value))\n      : t.callExpression(identifier, [\n          tag,\n          buildFinalOptions(t, styledOptions, targetProperty, labelProperty),\n          ...restStyledArgs\n        ])\n\n  return t.callExpression(styledCall, args)\n}\n\nconst visited = Symbol('visited')\n\nconst defaultImportedNames: ImportedNames = {\n  styled: 'styled',\n  css: 'css',\n  keyframes: 'keyframes',\n  injectGlobal: 'injectGlobal',\n  merge: 'merge'\n}\n\nconst importedNameKeys = Object.keys(defaultImportedNames).map(\n  key => (key === 'styled' ? 'default' : key)\n)\n\nconst defaultEmotionPaths = [\n  'emotion',\n  'react-emotion',\n  'preact-emotion',\n  '@emotion/primitives'\n]\n\nfunction getRelativePath(filepath: string, absoluteInstancePath: string) {\n  let relativePath = nodePath.relative(\n    nodePath.dirname(filepath),\n    absoluteInstancePath\n  )\n\n  return relativePath.charAt(0) === '.' ? relativePath : `./${relativePath}`\n}\n\nfunction getAbsolutePath(instancePath: string, rootPath: string) {\n  if (instancePath.charAt(0) === '.') {\n    let absoluteInstancePath = nodePath.resolve(rootPath, instancePath)\n    return absoluteInstancePath\n  }\n  return false\n}\n\nfunction getInstancePathToImport(instancePath: string, filepath: string) {\n  let absolutePath = getAbsolutePath(instancePath, process.cwd())\n  if (absolutePath === false) {\n    return instancePath\n  }\n  return getRelativePath(filepath, absolutePath)\n}\n\nfunction getInstancePathToCompare(instancePath: string, rootPath: string) {\n  let absolutePath = getAbsolutePath(instancePath, rootPath)\n  if (absolutePath === false) {\n    return instancePath\n  }\n  return absolutePath\n}\n\nexport default function(babel: Babel) {\n  const { types: t } = babel\n\n  return {\n    name: 'emotion', // not required\n    inherits: require('babel-plugin-syntax-jsx'),\n    visitor: {\n      Program: {\n        enter(path: BabelPath, state: EmotionBabelPluginPass) {\n          const hasFilepath =\n            path.hub.file.opts.filename &&\n            path.hub.file.opts.filename !== 'unknown'\n          state.emotionImportPath = 'emotion'\n          if (state.opts.primaryInstance !== undefined) {\n            state.emotionImportPath = getInstancePathToImport(\n              state.opts.primaryInstance,\n              path.hub.file.opts.filename\n            )\n          }\n\n          state.importedNames = {\n            ...defaultImportedNames,\n            ...state.opts.importedNames\n          }\n\n          const imports = []\n\n          let isModule = false\n\n          for (const node of path.node.body) {\n            if (t.isModuleDeclaration(node)) {\n              isModule = true\n              break\n            }\n          }\n\n          if (isModule) {\n            path.traverse({\n              ImportDeclaration: {\n                exit(path) {\n                  const { node } = path\n\n                  const imported = []\n                  const specifiers = []\n\n                  imports.push({\n                    source: node.source.value,\n                    imported,\n                    specifiers\n                  })\n\n                  for (const specifier of path.get('specifiers')) {\n                    const local = specifier.node.local.name\n\n                    if (specifier.isImportDefaultSpecifier()) {\n                      imported.push('default')\n                      specifiers.push({\n                        kind: 'named',\n                        imported: 'default',\n                        local\n                      })\n                    }\n\n                    if (specifier.isImportSpecifier()) {\n                      const importedName = specifier.node.imported.name\n                      imported.push(importedName)\n                      specifiers.push({\n                        kind: 'named',\n                        imported: importedName,\n                        local\n                      })\n                    }\n                  }\n                }\n              }\n            })\n          }\n          const emotionPaths = defaultEmotionPaths.concat(\n            (state.opts.instances || []).map(instancePath =>\n              getInstancePathToCompare(instancePath, process.cwd())\n            )\n          )\n          let dirname = hasFilepath\n            ? nodePath.dirname(path.hub.file.opts.filename)\n            : ''\n          imports.forEach(({ source, imported, specifiers }) => {\n            if (\n              emotionPaths.indexOf(\n                getInstancePathToCompare(source, dirname)\n              ) !== -1\n            ) {\n              const importedNames = specifiers\n                .filter(v => importedNameKeys.indexOf(v.imported) !== -1)\n                .reduce(\n                  (acc, { imported, local }) => ({\n                    ...acc,\n                    [imported === 'default' ? 'styled' : imported]: local\n                  }),\n                  defaultImportedNames\n                )\n              state.importedNames = {\n                ...importedNames,\n                ...state.opts.importedNames\n              }\n            }\n          })\n          state.cssPropIdentifiers = []\n          state.extractStatic =\n            // path.hub.file.opts.filename !== 'unknown' ||\n            state.opts.extractStatic\n\n          state.staticRules = []\n\n          state.insertStaticRules = function(staticRules) {\n            state.staticRules.push(...staticRules)\n          }\n        },\n        exit(path: BabelPath, state: EmotionBabelPluginPass) {\n          if (state.staticRules.length !== 0) {\n            const toWrite = state.staticRules.join('\\n').trim()\n            let cssFilename = path.hub.file.opts.generatorOpts\n              ? path.hub.file.opts.generatorOpts.sourceFileName\n              : path.hub.file.opts.sourceFileName\n            let cssFileOnDisk\n            let importPath\n\n            const cssFilenameArr = cssFilename.split('.')\n            // remove the extension\n            cssFilenameArr.pop()\n            // add emotion.css as an extension\n            cssFilenameArr.push('emotion.css')\n\n            cssFilename = cssFilenameArr.join('.')\n\n            if (state.opts.outputDir) {\n              const relativeToSourceDir = nodePath.relative(\n                nodePath.dirname(cssFilename),\n                state.opts.outputDir\n              )\n              importPath = nodePath.join(relativeToSourceDir, cssFilename)\n              cssFileOnDisk = nodePath.resolve(cssFilename, '..', importPath)\n            } else {\n              importPath = `./${nodePath.basename(cssFilename)}`\n              cssFileOnDisk = nodePath.resolve(cssFilename)\n            }\n\n            const exists = fs.existsSync(cssFileOnDisk)\n            addSideEffect(path, importPath)\n            if (\n              exists ? fs.readFileSync(cssFileOnDisk, 'utf8') !== toWrite : true\n            ) {\n              if (!exists) {\n                if (state.opts.outputDir) {\n                  mkdirp.sync(nodePath.dirname(cssFileOnDisk))\n                }\n\n                touchSync(cssFileOnDisk)\n              }\n              fs.writeFileSync(cssFileOnDisk, toWrite)\n            }\n          }\n        }\n      },\n      JSXOpeningElement(path: BabelPath, state: EmotionBabelPluginPass) {\n        cssProps(path, state, t)\n        if (state.opts.hoist) {\n          path.traverse({\n            CallExpression(callExprPath) {\n              if (\n                callExprPath.node.callee.name === state.importedNames.css ||\n                state.cssPropIdentifiers.indexOf(callExprPath.node.callee) !==\n                  -1\n              ) {\n                hoistPureArgs(callExprPath)\n              }\n            }\n          })\n        }\n      },\n      CallExpression: {\n        enter(path: BabelPath, state: EmotionBabelPluginPass) {\n          // $FlowFixMe\n          if (path[visited]) {\n            return\n          }\n          try {\n            if (t.isIdentifier(path.node.callee)) {\n              switch (path.node.callee.name) {\n                case state.importedNames.css:\n                case state.importedNames.keyframes: {\n                  path.addComment('leading', '#__PURE__')\n                  const label = getLabel(\n                    getIdentifierName(path, t),\n                    state.opts.autoLabel,\n                    state.opts.labelFormat,\n                    state.file.opts.filename\n                  )\n                  if (label) {\n                    path.node.arguments.push(t.stringLiteral(`label:${label};`))\n                  }\n                }\n                // eslint-disable-next-line no-fallthrough\n                case state.importedNames.injectGlobal:\n                  if (\n                    state.opts.sourceMap === true &&\n                    path.node.loc !== undefined\n                  ) {\n                    path.node.arguments.push(\n                      t.stringLiteral(addSourceMaps(path.node.loc.start, state))\n                    )\n                  }\n              }\n            }\n\n            if (\n              (t.isCallExpression(path.node.callee) &&\n                path.node.callee.callee.name === state.importedNames.styled) ||\n              (t.isMemberExpression(path.node.callee) &&\n                t.isIdentifier(path.node.callee.object) &&\n                path.node.callee.object.name === state.importedNames.styled)\n            ) {\n              const identifier = t.isCallExpression(path.node.callee)\n                ? path.node.callee.callee\n                : path.node.callee.object\n              path.replaceWith(\n                buildStyledObjectCallExpression(path, state, identifier, t)\n              )\n\n              if (state.opts.hoist) {\n                hoistPureArgs(path)\n              }\n            }\n          } catch (e) {\n            throw path.buildCodeFrameError(e)\n          }\n          // $FlowFixMe\n          path[visited] = true\n        },\n        exit(path: BabelPath, state: EmotionBabelPluginPass) {\n          try {\n            if (\n              path.node.callee &&\n              path.node.callee.property &&\n              path.node.callee.property.name === 'withComponent'\n            ) {\n              if (path.node.arguments.length === 1) {\n                path.node.arguments.push(\n                  t.objectExpression([\n                    buildTargetObjectProperty(path, state, t)\n                  ])\n                )\n              }\n            }\n          } catch (e) {\n            throw path.buildCodeFrameError(e)\n          }\n        }\n      },\n      TaggedTemplateExpression(path: BabelPath, state: EmotionBabelPluginPass) {\n        // $FlowFixMe\n        if (path[visited]) {\n          return\n        }\n        // $FlowFixMe\n        path[visited] = true\n        if (\n          // styled.h1`color:${color};`\n          t.isMemberExpression(path.node.tag) &&\n          path.node.tag.object.name === state.importedNames.styled\n        ) {\n          path.replaceWith(\n            buildStyledCallExpression(\n              path.node.tag.object,\n              [t.stringLiteral(path.node.tag.property.name)],\n              path,\n              state,\n              false,\n              t\n            )\n          )\n        } else if (\n          // styled('h1')`color:${color};`\n          t.isCallExpression(path.node.tag) &&\n          path.node.tag.callee.name === state.importedNames.styled\n        ) {\n          path.replaceWith(\n            buildStyledCallExpression(\n              path.node.tag.callee,\n              path.node.tag.arguments,\n              path,\n              state,\n              true,\n              t\n            )\n          )\n        } else if (t.isIdentifier(path.node.tag)) {\n          if (\n            path.node.tag.name === state.importedNames.css ||\n            state.cssPropIdentifiers.indexOf(path.node.tag) !== -1\n          ) {\n            replaceCssWithCallExpression(path, path.node.tag, state, t)\n          } else if (path.node.tag.name === state.importedNames.keyframes) {\n            replaceCssWithCallExpression(\n              path,\n              path.node.tag,\n              state,\n              t,\n              (src, name, hash) => `@keyframes ${name}-${hash} { ${src} }`,\n              false,\n              () => ''\n            )\n          } else if (path.node.tag.name === state.importedNames.injectGlobal) {\n            replaceCssWithCallExpression(\n              path,\n              path.node.tag,\n              state,\n              t,\n              undefined,\n              true,\n              () => ''\n            )\n          }\n        }\n      }\n    }\n  }\n}\n"],"names":["cloneNode","t","node","cloneDeep","getRuntimeImportPath","path","binding","scope","getBinding","name","isImportDeclaration","parentPath","buildCodeFrameError","importPath","source","value","match","buildMacroRuntimeNode","state","importName","runtimeImportPath","emotionImports","undefined","generateUidIdentifier","addRuntimeImports","keys","forEach","importSpecifiers","identifier","push","importDefaultSpecifier","importSpecifier","file","body","unshift","importDeclaration","stringLiteral","getName","identifierName","prefix","parts","join","getLabel","autoLabel","labelFormat","filename","trim","parsedPath","nodePath","parse","normalizedFilename","replace","createRawStringFromTemplateLiteral","quasi","strs","quasis","map","x","cooked","hash","hashArray","src","reduce","arr","str","i","length","omit","obj","testFn","target","Object","prototype","hasOwnProperty","call","getGeneratorOpts","opts","generatorOpts","makeSourceMapGenerator","sourceFileName","generator","SourceMapGenerator","sourceRoot","setSourceContent","code","addSourceMaps","offset","addMapping","convert","fromObject","toComment","cssPath","classNamesPath","get","isJSXSpreadAttribute","openElPath","attrPath","importedNames","css","cssPropValue","container","classNamesValue","isJSXExpressionContainer","expression","cssTemplateExpression","isTemplateLiteral","createCssTemplateExpression","isStringLiteral","templateLiteral","templateElement","args","sourceMap","loc","start","callExpression","getCssIdentifer","remove","replaceWith","createClassNameAttr","add","getMergeIdentifier","a","b","binaryExpression","jSXAttribute","jSXIdentifier","jSXExpressionContainer","autoImportCssProp","cssImport","addNamed","emotionImportPath","cssPropIdentifiers","merge","taggedTemplateExpression","createMacro","macro","references","babel","types","isPure","referenceKey","reverse","reference","runtimeNode","isTaggedTemplateExpression","addComment","options","referencesWithoutDefault","default","key","styledReference","isMemberExpression","tag","buildStyledCallExpression","property","isCallExpression","arguments","callee","isIdentifier","object","buildStyledObjectCallExpression","macros","emotionMacro","styledMacro","hashString","staticStylis","Stylis","hoistPureArgs","Array","isArray","arg","hoist","replaceCssWithCallExpression","staticCSSSrcCreator","removePath","staticCSSSelectorCreator","getIdentifierName","extractStatic","expressions","staticCSSRules","insertStaticRules","stringToAppend","label","appendStringToExpressions","getExpressionsFromTemplateLiteral","e","unsafeRequire","require","getPackageRootPath","memoize","findRoot","buildTargetObjectProperty","count","moduleName","rootPath","err","finalPath","slice","positionInFile","stuffToHash","normalize","stableClassName","objectProperty","buildFinalOptions","existingProperties","isObjectExpression","warn","properties","newProps","objectExpression","filter","Boolean","restArgs","targetProperty","staticClassName","finalOptions","labelProperty","styledCall","toLowerCase","memberExpression","styledOptions","restStyledArgs","styledArgs","visited","Symbol","defaultImportedNames","importedNameKeys","defaultEmotionPaths","getRelativePath","filepath","absoluteInstancePath","relativePath","relative","dirname","charAt","getAbsolutePath","instancePath","resolve","getInstancePathToImport","absolutePath","process","cwd","getInstancePathToCompare","hasFilepath","hub","primaryInstance","imports","isModule","isModuleDeclaration","traverse","imported","specifiers","specifier","local","isImportDefaultSpecifier","isImportSpecifier","importedName","emotionPaths","concat","instances","indexOf","v","acc","staticRules","toWrite","cssFilename","cssFileOnDisk","cssFilenameArr","split","pop","outputDir","relativeToSourceDir","basename","exists","fs","existsSync","readFileSync","sync","writeFileSync","callExprPath","keyframes","injectGlobal","styled"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAQA,SAASA,SAAT,CAAmBC,CAAnB,EAA2BC,IAA3B,EAAiC;SACxB,CAAC,OAAOD,EAAED,SAAT,KAAuB,UAAvB,GAAoCC,EAAED,SAAtC,GAAkDC,EAAEE,SAArD,EAAgED,IAAhE,CAAP;;;AAGF,AAAO,SAASE,oBAAT,CAA8BC,IAA9B,EAA+CJ,CAA/C,EAAyD;;MAExDK,UAAUD,KAAKE,KAAL,CAAWC,UAAX,CAAsBH,KAAKH,IAAL,CAAUO,IAAhC,CAAhB;;MACI,CAACR,EAAES,mBAAF,CAAsBJ,QAAQD,IAAR,CAAaM,UAAnC,CAAL,EAAqD;UAC7CL,QAAQD,IAAR,CAAaO,mBAAb,CACJ,oDADI,CAAN;;;MAIIC,aAAaP,QAAQD,IAAR,CAAaM,UAAb,CAAwBT,IAAxB,CAA6BY,MAA7B,CAAoCC,KAAvD;SACOF,WAAWG,KAAX,CAAiB,aAAjB,EAAgC,CAAhC,CAAP;;AAWF,AAAO,SAASC,qBAAT,CACLZ,IADK,EAELa,KAFK,EAGLC,UAHK,EAILlB,CAJK,EAKO;MACNmB,oBAAoBhB,qBAAqBC,IAArB,EAA2BJ,CAA3B,CAA1B;MACIiB,MAAMG,cAAN,KAAyBC,SAA7B,EAAwCJ,MAAMG,cAAN,GAAuB,EAAvB;;MACpCH,MAAMG,cAAN,CAAqBD,iBAArB,MAA4CE,SAAhD,EAA2D;UACnDD,cAAN,CAAqBD,iBAArB,IAA0C,EAA1C;;;MAEEF,MAAMG,cAAN,CAAqBD,iBAArB,EAAwCD,UAAxC,MAAwDG,SAA5D,EAAuE;;UAE/DD,cAAN,CAAqBD,iBAArB,EACED,UADF,IAEId,KAAKE,KAAL,CAAWgB,qBAAX,CAAiClB,KAAKH,IAAL,CAAUO,IAA3C,CAFJ;GARU;;;SAaLT,UAAUC,CAAV,EAAaiB,MAAMG,cAAN,CAAqBD,iBAArB,EAAwCD,UAAxC,CAAb,CAAP;;AAGF,AAAO,SAASK,iBAAT,CAA2BN,KAA3B,EAA0DjB,CAA1D,EAAoE;MACrEiB,MAAMG,cAAV,EAA0B;QAClBA,iBAAiBH,MAAMG,cAA7B;WACOI,IAAP,CAAYJ,cAAZ,EAA4BK,OAA5B,CAAoC,sBAAc;UAC1CC,mBAAmB,EAAzB;aACOF,IAAP,CAAYJ,eAAeR,UAAf,CAAZ,EAAwCa,OAAxC,CAAgD,sBAAc;YACtDE,aAAaP,eAAeR,UAAf,EAA2BM,UAA3B,CAAnB;;YACIA,eAAe,SAAnB,EAA8B;2BACXU,IAAjB,CAAsB5B,EAAE6B,sBAAF,CAAyBF,UAAzB,CAAtB;SADF,MAEO;2BACYC,IAAjB,CACE5B,EAAE8B,eAAF,CAAkBH,UAAlB,EAA8B3B,EAAE2B,UAAF,CAAaT,UAAb,CAA9B,CADF;;OALJ,EAFgD;;YAa1Ca,IAAN,CAAW3B,IAAX,CAAgBH,IAAhB,CAAqB+B,IAArB,CAA0BC,OAA1B,CACEjC,EAAEkC,iBAAF,CAAoBR,gBAApB,EAAsC1B,EAAEmC,aAAF,CAAgBvB,UAAhB,CAAtC,CADF;KAbF;UAiBMQ,cAAN,GAAuBC,SAAvB;;;AAGJ,AAAO,SAASe,OAAT,CAAiBC,cAAjB,EAA0CC,MAA1C,EAA0D;MACzDC,QAAQ,EAAd;QACMX,IAAN,CAAWU,MAAX;;MACID,cAAJ,EAAoB;UACZT,IAAN,CAAWS,cAAX;;;SAEKE,MAAMC,IAAN,CAAW,GAAX,CAAP;;AAGF,AAAO,SAASC,QAAT,CACLJ,cADK,EAELK,SAFK,EAGLC,WAHK,EAILC,QAJK,EAKL;MACI,CAACP,cAAD,IAAmB,CAACK,SAAxB,EAAmC,OAAO,IAAP;MAC/B,CAACC,WAAL,EAAkB,OAAON,eAAeQ,IAAf,EAAP;MAEZC,aAAaC,SAASC,KAAT,CAAeJ,QAAf,CAAnB;MACMK,qBAAqBH,WAAWtC,IAAX,CAAgB0C,OAAhB,CAAwB,GAAxB,EAA6B,GAA7B,CAA3B;SACOP,YACJO,OADI,CACI,aADJ,EACmBb,eAAeQ,IAAf,EADnB,EAEJK,OAFI,CAEI,gBAFJ,EAEsBD,kBAFtB,CAAP;;AAKF,AAAO,SAASE,kCAAT,CAA4CC,KAA5C,EAEJ;MACGC,OAAOD,MAAME,MAAN,CAAaC,GAAb,CAAiB;WAAKC,EAAE1C,KAAF,CAAQ2C,MAAb;GAAjB,CAAX;MACIC,OAAOC,UAAcN,IAAd,UAAX;MAEMO,MAAMP,KACTQ,MADS,CACF,UAACC,GAAD,EAAMC,GAAN,EAAWC,CAAX,EAAiB;QACnBpC,IAAJ,CAASmC,GAAT;;QACIC,MAAMX,KAAKY,MAAL,GAAc,CAAxB,EAA2B;UACrBrC,IAAJ,SAAeoC,CAAf;;;WAEKF,GAAP;GANQ,EAOP,EAPO,EAQTtB,IARS,CAQJ,EARI,EASTK,IATS,EAAZ;SAUO;YAAA;;GAAP;;AAGF,AAAO,SAASqB,IAAT,CACLC,GADK,EAELC,MAFK,EAGL;MACIC,SAA4B,EAAhC;MACIL,CAAJ;;OACKA,CAAL,IAAUG,GAAV,EAAe;QACT,CAACC,OAAOJ,CAAP,EAAUG,GAAV,CAAL,EAAqB;QACjB,CAACG,OAAOC,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCN,GAArC,EAA0CH,CAA1C,CAAL,EAAmD;WAC5CA,CAAP,IAAYG,IAAIH,CAAJ,CAAZ;;;SAEKK,MAAP;;;AC7HF,SAASK,gBAAT,CAA0B3C,IAA1B,EAAgC;SACvBA,KAAK4C,IAAL,CAAUC,aAAV,GAA0B7C,KAAK4C,IAAL,CAAUC,aAApC,GAAoD7C,KAAK4C,IAAhE;;;AAGF,AAAO,SAASE,sBAAT,CAAgC9C,IAAhC,EAAiD;MAChD6C,gBAAgBF,iBAAiB3C,IAAjB,CAAtB;MACMa,WAAWgC,cAAcE,cAA/B;MACMC,YAAY,IAAIC,4BAAJ,CAAuB;UACjCpC,QADiC;gBAE3BgC,cAAcK;GAFV,CAAlB;YAKUC,gBAAV,CAA2BtC,QAA3B,EAAqCb,KAAKoD,IAA1C;SACOJ,SAAP;;AAGF,AAAO,SAASK,aAAT,CACLC,MADK,EAELpE,KAFK,EAGL;MACM8D,YAAYF,uBAAuB5D,MAAMc,IAA7B,CAAlB;MACM6C,gBAAgBF,iBAAiBzD,MAAMc,IAAvB,CAAtB;YACUuD,UAAV,CAAqB;eACR;YACH,CADG;cAED;KAHS;YAKXV,cAAcE,cALH;cAMTO;GANZ;SAQOE,QAAQC,UAAR,CAAmBT,SAAnB,EAA8BU,SAA9B,CAAwC;eAAa;GAArD,CAAP;;;AC9Ba,mBACbrF,IADa,EAEba,KAFa,EAGbjB,CAHa,EAIb;MACI0F,OAAJ;MACIC,cAAJ;OAEKC,GAAL,CAAS,YAAT,EAAuBnE,OAAvB,CAA+B,sBAAc;QACvCzB,EAAE6F,oBAAF,CAAuBC,WAAW7F,IAAlC,CAAJ,EAA6C;;;;QAIvC8F,WAAWD,WAAWF,GAAX,CAAe,MAAf,CAAjB;QACMpF,OAAOuF,SAAS9F,IAAT,CAAcO,IAA3B;;QAEIA,SAASS,MAAM+E,aAAN,CAAoBC,GAAjC,EAAsC;gBAC1BF,QAAV;;;QAGEvF,SAAS,WAAb,EAA0B;uBACPuF,QAAjB;;GAbJ;MAiBI,CAACL,OAAL,EAAc;MAEVQ,eAAeR,QAAQS,SAAR,IAAqBT,QAAQS,SAAR,CAAkBrF,KAA1D;MACIsF,kBACFT,kBAAkBA,eAAeQ,SAAjC,IAA8CR,eAAeQ,SAAf,CAAyBrF,KADzE;;MAGId,EAAEqG,wBAAF,CAA2BH,YAA3B,CAAJ,EAA8C;mBAC7BA,aAAaI,UAA5B;;;MAGEC,qBAAJ;;MACIvG,EAAEwG,iBAAF,CAAoBN,YAApB,CAAJ,EAAuC;4BACbO,4BAA4BP,YAA5B,CAAxB;GADF,MAEO,IAAIlG,EAAE0G,eAAF,CAAkBR,YAAlB,CAAJ,EAAqC;4BAClBO,4BACtBzG,EAAE2G,eAAF,CACE,CACE3G,EAAE4G,eAAF,CAAkB;WACXV,aAAapF,KADF;cAERoF,aAAapF;KAFvB,CADF,CADF,EAOE,EAPF,CADsB,CAAxB;GADK,MAYA;QACC+F,OAAO5F,MAAM0D,IAAN,CAAWmC,SAAX,GACT,CACEZ,YADF,EAEElG,EAAEmC,aAAF,CAAgBiD,cAAcM,QAAQzF,IAAR,CAAa8G,GAAb,CAAiBC,KAA/B,EAAsC/F,KAAtC,CAAhB,CAFF,CADS,GAKT,CAACiF,YAAD,CALJ;4BAMwBlG,EAAEiH,cAAF,CAAiBC,iBAAjB,EAAoCL,IAApC,CAAxB;;;MAGA,CAACT,eAAD,IACCpG,EAAE0G,eAAF,CAAkBN,eAAlB,KAAsC,CAACA,gBAAgBtF,KAF1D,EAGE;QACI6E,cAAJ,EAAoBA,eAAejF,UAAf,CAA0ByG,MAA1B;YACZzG,UAAR,CAAmB0G,WAAnB,CAA+BC,oBAAoBd,qBAApB,CAA/B;;;;UAIM7F,UAAR,CAAmByG,MAAnB;;MACIxB,kBAAkBA,eAAejF,UAArC,EAAiD;QAC3CV,EAAEqG,wBAAF,CAA2BD,eAA3B,CAAJ,EAAiD;UACzCS,QAAO,CACXS,IACEf,qBADF,EAEEe,IAAItH,EAAEmC,aAAF,CAAgB,GAAhB,CAAJ,EAA0BiE,gBAAgBE,UAA1C,CAFF,CADW,CAAb;;UAOIrF,MAAM0D,IAAN,CAAWmC,SAAf,EAA0B;cACnBlF,IAAL,CAAU5B,EAAEmC,aAAF,CAAgBiD,cAAcM,QAAQzF,IAAR,CAAa8G,GAAb,CAAiBC,KAA/B,EAAsC/F,KAAtC,CAAhB,CAAV;;;qBAGaP,UAAf,CAA0B0G,WAA1B,CACEC,oBAAoBrH,EAAEiH,cAAF,CAAiBM,oBAAjB,EAAuCV,KAAvC,CAApB,CADF;KAZF,MAeO;qBACUnG,UAAf,CAA0B0G,WAA1B,CACEC,oBACEC,IACEf,qBADF,EAEEvG,EAAEmC,aAAF,QAAoBiE,gBAAgBtF,KAAhB,IAAyB,EAA7C,EAFF,CADF,CADF;;;;WAWKwG,GAAT,CAAaE,CAAb,EAAgBC,CAAhB,EAAmB;WACVzH,EAAE0H,gBAAF,CAAmB,GAAnB,EAAwBF,CAAxB,EAA2BC,CAA3B,CAAP;;;WAGOJ,mBAAT,CAA6Bf,UAA7B,EAAyC;WAChCtG,EAAE2H,YAAF,CACL3H,EAAE4H,aAAF,CAAgB,WAAhB,CADK,EAEL5H,EAAE6H,sBAAF,CAAyBvB,UAAzB,CAFK,CAAP;;;WAMOY,eAAT,GAA2B;QACrBjG,MAAM0D,IAAN,CAAWmD,iBAAX,KAAiC,KAArC,EAA4C;UACpCC,YAAYC,6BAAS5H,IAAT,EAAe,KAAf,EAAsBa,MAAMgH,iBAA5B,CAAlB;YACMC,kBAAN,CAAyBtG,IAAzB,CAA8BmG,SAA9B;aACOA,SAAP;KAHF,MAIO;aACE/H,EAAE2B,UAAF,CAAaV,MAAM+E,aAAN,CAAoBC,GAAjC,CAAP;;;;WAGKsB,kBAAT,GAA8B;QACxBtG,MAAM0D,IAAN,CAAWmD,iBAAX,KAAiC,KAArC,EAA4C;aACnCE,6BAAS5H,IAAT,EAAe,OAAf,EAAwBa,MAAMgH,iBAA9B,CAAP;KADF,MAEO;aACEjI,EAAE2B,UAAF,CAAaV,MAAM+E,aAAN,CAAoBmC,KAAjC,CAAP;;;;WAGK1B,2BAAT,CAAqCE,eAArC,EAAsD;WAC7C3G,EAAEoI,wBAAF,CAA2BlB,iBAA3B,EAA8CP,eAA9C,CAAP;;;;AC9HJ,mBAAe0B,8BAAYC,KAAZ,CAAf;;AAEA,SAASA,KAAT,OAA2D;MAA1CC,UAA0C,QAA1CA,UAA0C;MAA9BtH,KAA8B,QAA9BA,KAA8B;MAAPjB,CAAO,QAAvBwI,KAAuB,CAAdC,KAAc;SAClDjH,IAAP,CAAY+G,UAAZ,EAAwB9G,OAAxB,CAAgC,wBAAgB;QAC1CiH,SAAS,IAAb;;YACQC,YAAR;WACO,cAAL;;mBACW,KAAT;;;;WAGG,KAAL;WACK,WAAL;;qBACaA,YAAX,EAAyBC,OAAzB,GAAmCnH,OAAnC,CAA2C,qBAAa;gBAChDrB,OAAOyI,UAAUnI,UAAvB;gBACMoI,cAAc9H,sBAClB6H,SADkB,EAElB5H,KAFkB,EAGlB0H,YAHkB,EAIlB3I,CAJkB,CAApB;;gBAMIA,EAAE+I,0BAAF,CAA6B3I,IAA7B,CAAJ,EAAwC;2CAEpCA,IADF,EAEE0I,WAFF,EAGE7H,KAHF,EAIEjB,CAJF,EAKEqB,SALF,EAME,CAACqH,MANH;aADF,MASO;kBACDA,MAAJ,EAAY;qBACLM,UAAL,CAAgB,SAAhB,EAA2B,WAA3B;;;wBAEQ5B,WAAV,CAAsB0B,WAAtB;;WArBJ;;;;;;qBA2BWH,YAAX,EAAyBC,OAAzB,GAAmCnH,OAAnC,CAA2C,qBAAa;sBAC5C2F,WAAV,CACEpG,sBAAsB6H,SAAtB,EAAiC5H,KAAjC,EAAwC0H,YAAxC,EAAsD3I,CAAtD,CADF;WADF;;;GApCN;oBA4CkBiB,KAAlB,EAAyBjB,CAAzB;;;AC3CF,kBAAeqI,8BAAYC,OAAZ,CAAf;;AAEA,SAASA,OAAT,CAAeW,OAAf,EAAwB;MACdV,UADc,GAC6BU,OAD7B,CACdV,UADc;MACFtH,KADE,GAC6BgI,OAD7B,CACFhI,KADE;MACqBjB,CADrB,GAC6BiJ,OAD7B,CACKT,KADL,CACcC,KADd;MAElBS,2BAA2BX,UAA/B;;MACIA,WAAWY,OAAf,EAAwB;+BACKjF,KAAKqE,UAAL,EAAiB;aAAOa,QAAQ,SAAf;KAAjB,CAA3B;eACWD,OAAX,CAAmBP,OAAnB,GAA6BnH,OAA7B,CAAqC,2BAAmB;UAChDrB,OAAOiJ,gBAAgB3I,UAAhB,CAA2BA,UAAxC;UACMoI,cAAc9H,sBAClBqI,eADkB,EAElBpI,KAFkB,EAGlB,SAHkB,EAIlBjB,CAJkB,CAApB;;UAMIA,EAAEwG,iBAAF,CAAoBpG,KAAKH,IAAL,CAAUmD,KAA9B,CAAJ,EAA0C;YACpCpD,EAAEsJ,kBAAF,CAAqBlJ,KAAKH,IAAL,CAAUsJ,GAA/B,CAAJ,EAAyC;eAClCnC,WAAL,CACEoC,0BACEV,WADF,EAEE,CAAC9I,EAAEmC,aAAF,CAAgB/B,KAAKH,IAAL,CAAUsJ,GAAV,CAAcE,QAAd,CAAuBjJ,IAAvC,CAAD,CAFF,EAGEJ,IAHF,EAIEa,KAJF,EAKE,KALF,EAMEjB,CANF,CADF;SADF,MAWO,IAAIA,EAAE0J,gBAAF,CAAmBtJ,KAAKH,IAAL,CAAUsJ,GAA7B,CAAJ,EAAuC;eACvCnC,WAAL,CACEoC,0BACEV,WADF,EAEE1I,KAAKH,IAAL,CAAUsJ,GAAV,CAAcI,SAFhB,EAGEvJ,IAHF,EAIEa,KAJF,EAKE,IALF,EAMEjB,CANF,CADF;;OAbJ,MAwBO,IACLA,EAAE0J,gBAAF,CAAmBtJ,IAAnB,MACCJ,EAAE0J,gBAAF,CAAmBtJ,KAAKH,IAAL,CAAU2J,MAA7B,KACC5J,EAAE6J,YAAF,CAAezJ,KAAKH,IAAL,CAAU2J,MAAV,CAAiBE,MAAhC,CAFF,CADK,EAIL;aACK1C,WAAL,CACE2C,gCAAgC3J,IAAhC,EAAsCa,KAAtC,EAA6C6H,WAA7C,EAA0D9I,CAA1D,CADF;;KArCJ;;;4BA2CgBiJ,OAAlB;gBAAuCC;;;;IC5B5Bc,SAAS;WACXC,YADW;UAEZC;CAFH;AAOP,AAAO,SAASvG,SAAT,CAAmBG,GAAnB,EAAuC;SACrCqG,WAAWrG,IAAItB,IAAJ,CAAS,EAAT,CAAX,CAAP;;AAGF,IAAM4H,eAAe,IAAIC,MAAJ,CAAW;YAAY;CAAvB,CAArB;AAEA,AAAO,SAASC,aAAT,CAAuBlK,IAAvB,EAAwC;MACvCyG,OAAOzG,KAAKwF,GAAL,CAAS,WAAT,CAAb;;MAEIiB,QAAQ0D,MAAMC,OAAN,CAAc3D,IAAd,CAAZ,EAAiC;SAC1BpF,OAAL,CAAa,eAAO;UACd,CAACgJ,IAAIZ,YAAJ,EAAD,IAAuBY,IAAI/B,MAAJ,EAA3B,EAAyC;YACnCgC,KAAJ;;KAFJ;;;AA2BJ,AAAO,SAASC,4BAAT,CACLvK,IADK,EAELuB,UAFK,EAGLV,KAHK,EAILjB,CAJK,EAKL4K,mBALK,EAULC,UAVK,EAWLC,wBAXK,EAeL;MAVAF,mBAUA;uBAAA,GANc;aAAOhH,GAAP;KAMd;;;MALAiH,UAKA;cAAA,GALsB,KAKtB;;;MAJAC,wBAIA;4BAAA,GAJmE,kCACjEtK,IADiE,EAEjEkD,IAFiE;mBAG1DlD,IAH0D,SAGlDkD,IAHkD;KAInE;;;MACI;gCACkBP,mCAAmC/C,KAAKH,IAAL,CAAUmD,KAA7C,CADlB;QACIM,KADJ,yBACIA,IADJ;QACUE,IADV,yBACUA,GADV;;QAEIvB,iBAAiB0I,4BAAkB3K,IAAlB,EAAwBJ,CAAxB,CAAvB;;QACMQ,QAAO4B,QAAQC,cAAR,EAAwB,KAAxB,CAAb;;QAEIpB,MAAM+J,aAAN,IAAuB,CAAC5K,KAAKH,IAAL,CAAUmD,KAAV,CAAgB6H,WAAhB,CAA4BhH,MAAxD,EAAgE;UACxDiH,iBAAiBd,aACrBU,yBAAyBtK,KAAzB,EAA+BkD,KAA/B,CADqB,EAErBkH,oBAAoBhH,IAApB,EAAyBpD,KAAzB,EAA+BkD,KAA/B,CAFqB,CAAvB;YAIMyH,iBAAN,CAAwB,CAACD,cAAD,CAAxB;;UACI,CAACL,UAAL,EAAiB;eACRzK,KAAKgH,WAAL,CAAiBpH,EAAEmC,aAAF,CAAmB3B,KAAnB,SAA2BkD,KAA3B,CAAjB,CAAP;;;aAEKtD,KAAKgH,WAAL,CAAiBpH,EAAE2B,UAAF,CAAa,WAAb,CAAjB,CAAP;;;QAGE,CAACkJ,UAAL,EAAiB;WACV7B,UAAL,CAAgB,SAAhB,EAA2B,WAA3B;;;QAGEoC,iBAAiB,EAArB;;QACInK,MAAM0D,IAAN,CAAWmC,SAAX,KAAyB,IAAzB,IAAiC1G,KAAKH,IAAL,CAAUmD,KAAV,CAAgB2D,GAAhB,KAAwB1F,SAA7D,EAAwE;wBACpD+D,cAAchF,KAAKH,IAAL,CAAUmD,KAAV,CAAgB2D,GAAhB,CAAoBC,KAAlC,EAAyC/F,KAAzC,CAAlB;;;QAGIoK,QAAQ5I,SACZJ,cADY,EAEZpB,MAAM0D,IAAN,CAAWjC,SAFC,EAGZzB,MAAM0D,IAAN,CAAWhC,WAHC,EAIZ1B,MAAMc,IAAN,CAAW4C,IAAX,CAAgB/B,QAJJ,CAAd;;QAOIyI,KAAJ,EAAW;mCACkBA,KAA3B;;;SAGGjE,WAAL,CACEpH,EAAEiH,cAAF,CACEtF,UADF,EAEE2J,qCACEC,6CAAkCnL,KAAKH,IAAL,CAAUmD,KAA5C,EAAmDpD,CAAnD,CADF,EAEEoL,cAFF,EAGEpL,CAHF,CAFF,CADF;;QAWIiB,MAAM0D,IAAN,CAAW+F,KAAf,EAAsB;oBACNtK,IAAd;;;;GAjDJ,CAqDE,OAAOoL,CAAP,EAAU;QACNpL,IAAJ,EAAU;YACFA,KAAKO,mBAAL,CAAyB6K,CAAzB,CAAN;;;UAGIA,CAAN;;;AAIJ,IAAMC,gBAAgBC,OAAtB;AAEA,IAAMC,qBAAqBC,QAAQ;SAAYC,SAASjJ,QAAT,CAAZ;CAAR,CAA3B;;AAEA,SAASkJ,yBAAT,CAAmC1L,IAAnC,EAAyCa,KAAzC,EAAgDjB,CAAhD,EAAmD;MAC7CiB,MAAM8K,KAAN,KAAgB1K,SAApB,EAA+B;UACvB0K,KAAN,GAAc,CAAd;;;MAGInJ,WAAW3B,MAAMc,IAAN,CAAW4C,IAAX,CAAgB/B,QAAjC,CALiD;;;MAS7CoJ,aAAa,EAAjB;MACIC,WAAWrJ,QAAf;;MAEI;eACS+I,mBAAmB/I,QAAnB,CAAX;iBACa6I,cAAcQ,WAAW,eAAzB,EAA0CzL,IAAvD;GAFF,CAGE,OAAO0L,GAAP,EAAY;;MAERC,YAAYvJ,aAAaqJ,QAAb,GAAwB,EAAxB,GAA6BrJ,SAASwJ,KAAT,CAAeH,SAAShI,MAAxB,CAA/C;MAEMoI,iBAAiBpL,MAAM8K,KAAN,EAAvB;MAEMO,cAAc,CAACN,UAAD,CAApB;;MAEIG,SAAJ,EAAe;gBACDvK,IAAZ,CAAiBmB,SAASwJ,SAAT,CAAmBJ,SAAnB,CAAjB;GADF,MAEO;gBACOvK,IAAZ,CAAiBX,MAAMc,IAAN,CAAWoD,IAA5B;;;MAGIqH,wBAAsB7I,UAAU2I,WAAV,CAAtB,GAA+CD,cAArD;SAEOrM,EAAEyM,cAAF,CACLzM,EAAE2B,UAAF,CAAa,QAAb,CADK,EAEL3B,EAAEmC,aAAF,CAAgBqK,eAAhB,CAFK,CAAP;;;AAMF,IAAME,oBAAoB,SAApBA,iBAAoB,CAAC1M,CAAD,EAAIiJ,OAAJ,EAA6B;MACjD0D,qBAAqB,EAAzB;;MAEI1D,WAAW,CAACjJ,EAAE4M,kBAAF,CAAqB3D,OAArB,CAAhB,EAA+C;YACrC4D,IAAR,CACE,8EADF;GADF,MAIO,IAAI5D,OAAJ,EAAa;;yBAEGA,QAAQ6D,UAA7B;;;oCATsCC,QAAa;YAAA;;;SAY9C/M,EAAEgN,gBAAF,CACFL,kBADE,QAEFI,SAASE,MAAT,CAAgBC,OAAhB,CAFE,EAAP;CAZF;;AAkBA,AAAO,SAAS1D,yBAAT,CACL7H,UADK,EAELkF,IAFK,EAGLzG,IAHK,EAILa,KAJK,EAKLyI,gBALK,EAML1J,CANK,EAOL;;MAEMuJ,MAAM1C,KAAK,CAAL,CAAZ;MACMoC,UAAUpC,KAAK5C,MAAL,IAAe,CAAf,GAAmB4C,KAAK,CAAL,CAAnB,GAA6B,IAA7C;MACMsG,WAAWtG,KAAKuF,KAAL,CAAW,CAAX,CAAjB;MAEM/J,iBAAiB0I,4BAAkB3K,IAAlB,EAAwBJ,CAAxB,CAAvB;MAEMoN,iBAAiBtB,0BAA0B1L,IAA1B,EAAgCa,KAAhC,EAAuCjB,CAAvC,CAAvB;;MAEIiB,MAAM+J,aAAN,IAAuB,CAAC5K,KAAKH,IAAL,CAAUmD,KAAV,CAAgB6H,WAAhB,CAA4BhH,MAAxD,EAAgE;iCACxCd,mCAAmC/C,KAAKH,IAAL,CAAUmD,KAA7C,CADwC;QACtDM,MADsD,0BACtDA,IADsD;QAChDE,KADgD,0BAChDA,GADgD;;QAExDyJ,2BAAyB3J,MAA/B;QACMwH,iBAAiBd,mBAAiBiD,eAAjB,EAAoCzJ,KAApC,CAAvB;UAEMuH,iBAAN,CAAwB,CAACD,cAAD,CAAxB;;QAEMoC,gBAAeZ,kBACnB1M,CADmB,EAEnBiJ,OAFmB,EAGnBjJ,EAAEyM,cAAF,CAAiBzM,EAAE2B,UAAF,CAAa,GAAb,CAAjB,EAAoC3B,EAAEmC,aAAF,CAAgBkL,eAAhB,CAApC,CAHmB,EAInBD,cAJmB,CAArB;;WAOOpN,EAAEiH,cAAF;MAEHA,cAAF,CAAiBtF,UAAjB,GAA8B4H,GAA9B,EAAmC+D,aAAnC,SAAoDH,QAApD,EAFK,EAGL,EAHK,CAAP;;;OAOGnE,UAAL,CAAgB,SAAhB,EAA2B,WAA3B;MAEIoC,iBAAiB,EAArB;;MAEInK,MAAM0D,IAAN,CAAWmC,SAAX,KAAyB,IAAzB,IAAiC1G,KAAKH,IAAL,CAAUmD,KAAV,CAAgB2D,GAAhB,KAAwB1F,SAA7D,EAAwE;sBACpD+D,cAAchF,KAAKH,IAAL,CAAUmD,KAAV,CAAgB2D,GAAhB,CAAoBC,KAAlC,EAAyC/F,KAAzC,CAAlB;;;MAGEsM,aAAJ;MAEMlC,QAAQ5I,SACZJ,cADY,EAEZpB,MAAM0D,IAAN,CAAWjC,SAFC,EAGZzB,MAAM0D,IAAN,CAAWhC,WAHC,EAIZ1B,MAAMc,IAAN,CAAW4C,IAAX,CAAgB/B,QAJJ,CAAd;;MAOIyI,KAAJ,EAAW;oBACOrL,EAAEyM,cAAF,CACdzM,EAAE2B,UAAF,CAAa,OAAb,CADc,EAEd3B,EAAEmC,aAAF,CAAgBkJ,KAAhB,CAFc,CAAhB;;;MAMIiC,eAAeZ,kBACnB1M,CADmB,EAEnBiJ,OAFmB,EAGnBsE,aAHmB,EAInBH,cAJmB,CAArB;MAOII,aACFxN,EAAE0G,eAAF,CAAkB6C,GAAlB,KACA,CAACG,gBADD;MAGI5I,KAAJ,CAAU,CAAV,MAAiByI,IAAIzI,KAAJ,CAAU,CAAV,EAAa2M,WAAb,EAHjB;IAKMC,gBAAF,CAAmB/L,UAAnB,EAA+B3B,EAAE2B,UAAF,CAAa4H,IAAIzI,KAAjB,CAA/B,CALJ;IAOMmG,cAAF,CAAiBtF,UAAjB,GAA8B4H,GAA9B,EAAmC+D,YAAnC,SAAoDH,QAApD,EARN;SAUOnN,EAAEiH,cAAF,CACLuG,UADK,EAELlC,qCACEC,6CAAkCnL,KAAKH,IAAL,CAAUmD,KAA5C,EAAmDpD,CAAnD,CADF,EAEEoL,cAFF,EAGEpL,CAHF,CAFK,CAAP;;AAUF,AAAO,SAAS+J,+BAAT,CACL3J,IADK,EAELa,KAFK,EAGLU,UAHK,EAIL3B,CAJK,EAKL;MACMoN,iBAAiBtB,0BAA0B1L,IAA1B,EAAgCa,KAAhC,EAAuCjB,CAAvC,CAAvB;MACMqC,iBAAiB0I,4BAAkB3K,IAAlB,EAAwBJ,CAAxB,CAAvB;MAEMuJ,MAAMvJ,EAAE0J,gBAAF,CAAmBtJ,KAAKH,IAAL,CAAU2J,MAA7B,IACRxJ,KAAKH,IAAL,CAAU2J,MAAV,CAAiBD,SAAjB,CAA2B,CAA3B,CADQ,GAER3J,EAAEmC,aAAF,CAAgB/B,KAAKH,IAAL,CAAU2J,MAAV,CAAiBH,QAAjB,CAA0BjJ,IAA1C,CAFJ;MAGIkJ,mBAAmB1J,EAAE0J,gBAAF,CAAmBtJ,KAAKH,IAAL,CAAU2J,MAA7B,CAAvB;MACI+D,gBAAgB,IAApB;MACIC,iBAAiB,EAArB;;MACI5N,EAAE0J,gBAAF,CAAmBtJ,KAAKH,IAAL,CAAU2J,MAA7B,CAAJ,EAA0C;QAClCiE,aAAazN,KAAKH,IAAL,CAAU2J,MAAV,CAAiBD,SAApC;;QAEIkE,WAAW5J,MAAX,IAAqB,CAAzB,EAA4B;sBACV4J,WAAW,CAAX,CAAhB;;;qBAGeA,WAAWzB,KAAX,CAAiB,CAAjB,CAAjB;;;MAGEvF,OAAOzG,KAAKH,IAAL,CAAU0J,SAArB;;MACI1I,MAAM0D,IAAN,CAAWmC,SAAX,KAAyB,IAAzB,IAAiC1G,KAAKH,IAAL,CAAU8G,GAAV,KAAkB1F,SAAvD,EAAkE;SAC3DO,IAAL,CAAU5B,EAAEmC,aAAF,CAAgBiD,cAAchF,KAAKH,IAAL,CAAU8G,GAAV,CAAcC,KAA5B,EAAmC/F,KAAnC,CAAhB,CAAV;;;MAGIoK,QAAQ5I,SACZJ,cADY,EAEZpB,MAAM0D,IAAN,CAAWjC,SAFC,EAGZzB,MAAM0D,IAAN,CAAWhC,WAHC,EAIZ1B,MAAMc,IAAN,CAAW4C,IAAX,CAAgB/B,QAJJ,CAAd;MAOM2K,gBAAgBlC,QAClBrL,EAAEyM,cAAF,CAAiBzM,EAAE2B,UAAF,CAAa,OAAb,CAAjB,EAAwC3B,EAAEmC,aAAF,CAAgBkJ,KAAhB,CAAxC,CADkB,GAElB,IAFJ;OAIKrC,UAAL,CAAgB,SAAhB,EAA2B,WAA3B;MAEIwE,aACFxN,EAAE0G,eAAF,CAAkB6C,GAAlB,KACA,CAACG,gBADD,IAEAH,IAAIzI,KAAJ,CAAU,CAAV,MAAiByI,IAAIzI,KAAJ,CAAU,CAAV,EAAa2M,WAAb,EAFjB,GAGIzN,EAAE0N,gBAAF,CAAmB/L,UAAnB,EAA+B3B,EAAE2B,UAAF,CAAa4H,IAAIzI,KAAjB,CAA/B,CAHJ,GAIId,EAAEiH,cAAF,CAAiBtF,UAAjB,GACE4H,GADF,EAEEmD,kBAAkB1M,CAAlB,EAAqB2N,aAArB,EAAoCP,cAApC,EAAoDG,aAApD,CAFF,SAGKK,cAHL,EALN;SAWO5N,EAAEiH,cAAF,CAAiBuG,UAAjB,EAA6B3G,IAA7B,CAAP;;AAGF,IAAMiH,UAAUC,OAAO,SAAP,CAAhB;AAEA,IAAMC,uBAAsC;UAClC,QADkC;OAErC,KAFqC;aAG/B,WAH+B;gBAI5B,cAJ4B;SAKnC;CALT;AAQA,IAAMC,mBAAmB3J,OAAO9C,IAAP,CAAYwM,oBAAZ,EAAkCzK,GAAlC,CACvB;SAAQ6F,QAAQ,QAAR,GAAmB,SAAnB,GAA+BA,GAAvC;CADuB,CAAzB;AAIA,IAAM8E,sBAAsB,CAC1B,SAD0B,EAE1B,eAF0B,EAG1B,gBAH0B,EAI1B,qBAJ0B,CAA5B;;AAOA,SAASC,eAAT,CAAyBC,QAAzB,EAA2CC,oBAA3C,EAAyE;MACnEC,eAAevL,SAASwL,QAAT,CACjBxL,SAASyL,OAAT,CAAiBJ,QAAjB,CADiB,EAEjBC,oBAFiB,CAAnB;SAKOC,aAAaG,MAAb,CAAoB,CAApB,MAA2B,GAA3B,GAAiCH,YAAjC,UAAqDA,YAA5D;;;AAGF,SAASI,eAAT,CAAyBC,YAAzB,EAA+C1C,QAA/C,EAAiE;MAC3D0C,aAAaF,MAAb,CAAoB,CAApB,MAA2B,GAA/B,EAAoC;QAC9BJ,uBAAuBtL,SAAS6L,OAAT,CAAiB3C,QAAjB,EAA2B0C,YAA3B,CAA3B;WACON,oBAAP;;;SAEK,KAAP;;;AAGF,SAASQ,uBAAT,CAAiCF,YAAjC,EAAuDP,QAAvD,EAAyE;MACnEU,eAAeJ,gBAAgBC,YAAhB,EAA8BI,QAAQC,GAAR,EAA9B,CAAnB;;MACIF,iBAAiB,KAArB,EAA4B;WACnBH,YAAP;;;SAEKR,gBAAgBC,QAAhB,EAA0BU,YAA1B,CAAP;;;AAGF,SAASG,wBAAT,CAAkCN,YAAlC,EAAwD1C,QAAxD,EAA0E;MACpE6C,eAAeJ,gBAAgBC,YAAhB,EAA8B1C,QAA9B,CAAnB;;MACI6C,iBAAiB,KAArB,EAA4B;WACnBH,YAAP;;;SAEKG,YAAP;;;AAGF,AAAe,gBAAStG,KAAT,EAAuB;MACrBxI,CADqB,GACfwI,KADe,CAC5BC,KAD4B;SAG7B;UACC,SADD;;cAEKiD,QAAQ,yBAAR,CAFL;aAGI;eACE;aAAA,iBACDtL,IADC,EACgBa,KADhB,EAC+C;cAC9CiO,cACJ9O,KAAK+O,GAAL,CAASpN,IAAT,CAAc4C,IAAd,CAAmB/B,QAAnB,IACAxC,KAAK+O,GAAL,CAASpN,IAAT,CAAc4C,IAAd,CAAmB/B,QAAnB,KAAgC,SAFlC;gBAGMqF,iBAAN,GAA0B,SAA1B;;cACIhH,MAAM0D,IAAN,CAAWyK,eAAX,KAA+B/N,SAAnC,EAA8C;kBACtC4G,iBAAN,GAA0B4G,wBACxB5N,MAAM0D,IAAN,CAAWyK,eADa,EAExBhP,KAAK+O,GAAL,CAASpN,IAAT,CAAc4C,IAAd,CAAmB/B,QAFK,CAA1B;;;gBAMIoD,aAAN,gBACKgI,oBADL,EAEK/M,MAAM0D,IAAN,CAAWqB,aAFhB;cAKMqJ,UAAU,EAAhB;cAEIC,WAAW,KAAf;;+BAEmBlP,KAAKH,IAAL,CAAU+B,IAA7B,kHAAmC;;;;;;;;;;;;gBAAxB/B,IAAwB;;gBAC7BD,EAAEuP,mBAAF,CAAsBtP,IAAtB,CAAJ,EAAiC;yBACpB,IAAX;;;;;cAKAqP,QAAJ,EAAc;iBACPE,QAAL,CAAc;iCACO;oBAAA,gBACZpP,IADY,EACN;sBACDH,IADC,GACQG,IADR,CACDH,IADC;sBAGHwP,WAAW,EAAjB;sBACMC,aAAa,EAAnB;0BAEQ9N,IAAR,CAAa;4BACH3B,KAAKY,MAAL,CAAYC,KADT;sCAAA;;mBAAb;;wCAMwBV,KAAKwF,GAAL,CAAS,YAAT,CAAxB,yHAAgD;;;;;;;;;;;;wBAArC+J,SAAqC;wBACxCC,QAAQD,UAAU1P,IAAV,CAAe2P,KAAf,CAAqBpP,IAAnC;;wBAEImP,UAAUE,wBAAV,EAAJ,EAA0C;+BAC/BjO,IAAT,CAAc,SAAd;iCACWA,IAAX,CAAgB;8BACR,OADQ;kCAEJ,SAFI;;uBAAhB;;;wBAOE+N,UAAUG,iBAAV,EAAJ,EAAmC;0BAC3BC,eAAeJ,UAAU1P,IAAV,CAAewP,QAAf,CAAwBjP,IAA7C;+BACSoB,IAAT,CAAcmO,YAAd;iCACWnO,IAAX,CAAgB;8BACR,OADQ;kCAEJmO,YAFI;;uBAAhB;;;;;aA7BV;;;cAwCIC,eAAe9B,oBAAoB+B,MAApB,CACnB,CAAChP,MAAM0D,IAAN,CAAWuL,SAAX,IAAwB,EAAzB,EAA6B3M,GAA7B,CAAiC;mBAC/B0L,yBAAyBN,YAAzB,EAAuCI,QAAQC,GAAR,EAAvC,CAD+B;WAAjC,CADmB,CAArB;cAKIR,UAAUU,cACVnM,SAASyL,OAAT,CAAiBpO,KAAK+O,GAAL,CAASpN,IAAT,CAAc4C,IAAd,CAAmB/B,QAApC,CADU,GAEV,EAFJ;kBAGQnB,OAAR,CAAgB,iBAAsC;gBAAnCZ,MAAmC,SAAnCA,MAAmC;gBAA3B4O,QAA2B,SAA3BA,QAA2B;gBAAjBC,UAAiB,SAAjBA,UAAiB;;gBAElDM,aAAaG,OAAb,CACElB,yBAAyBpO,MAAzB,EAAiC2N,OAAjC,CADF,MAEM,CAAC,CAHT,EAIE;kBACMxI,gBAAgB0J,WACnBzC,MADmB,CACZ;uBAAKgB,iBAAiBkC,OAAjB,CAAyBC,EAAEX,QAA3B,MAAyC,CAAC,CAA/C;eADY,EAEnB5L,MAFmB,CAGlB,UAACwM,GAAD;;;oBAAQZ,QAAR,SAAQA,QAAR;oBAAkBG,KAAlB,SAAkBA,KAAlB;oCACKS,GADL,6BAEGZ,aAAa,SAAb,GAAyB,QAAzB,GAAoCA,QAFvC,IAEkDG,KAFlD;eAHkB,EAOlB5B,oBAPkB,CAAtB;oBASMhI,aAAN,gBACKA,aADL,EAEK/E,MAAM0D,IAAN,CAAWqB,aAFhB;;WAfJ;gBAqBMkC,kBAAN,GAA2B,EAA3B;gBACM8C,aAAN;gBAEQrG,IAAN,CAAWqG,aAFb;gBAIMsF,WAAN,GAAoB,EAApB;;gBAEMnF,iBAAN,GAA0B,UAASmF,WAAT,EAAsB;;;wCACxCA,WAAN,EAAkB1O,IAAlB,2BAA0B0O,WAA1B;WADF;SA1GK;YAAA,gBA8GFlQ,IA9GE,EA8Gea,KA9Gf,EA8G8C;cAC/CA,MAAMqP,WAAN,CAAkBrM,MAAlB,KAA6B,CAAjC,EAAoC;gBAC5BsM,UAAUtP,MAAMqP,WAAN,CAAkB9N,IAAlB,CAAuB,IAAvB,EAA6BK,IAA7B,EAAhB;gBACI2N,cAAcpQ,KAAK+O,GAAL,CAASpN,IAAT,CAAc4C,IAAd,CAAmBC,aAAnB,GACdxE,KAAK+O,GAAL,CAASpN,IAAT,CAAc4C,IAAd,CAAmBC,aAAnB,CAAiCE,cADnB,GAEd1E,KAAK+O,GAAL,CAASpN,IAAT,CAAc4C,IAAd,CAAmBG,cAFvB;gBAGI2L,aAAJ;gBACI7P,UAAJ;gBAEM8P,iBAAiBF,YAAYG,KAAZ,CAAkB,GAAlB,CAAvB,CARkC;;2BAUnBC,GAAf,GAVkC;;2BAYnBhP,IAAf,CAAoB,aAApB;0BAEc8O,eAAelO,IAAf,CAAoB,GAApB,CAAd;;gBAEIvB,MAAM0D,IAAN,CAAWkM,SAAf,EAA0B;kBAClBC,sBAAsB/N,SAASwL,QAAT,CAC1BxL,SAASyL,OAAT,CAAiBgC,WAAjB,CAD0B,EAE1BvP,MAAM0D,IAAN,CAAWkM,SAFe,CAA5B;2BAIa9N,SAASP,IAAT,CAAcsO,mBAAd,EAAmCN,WAAnC,CAAb;8BACgBzN,SAAS6L,OAAT,CAAiB4B,WAAjB,EAA8B,IAA9B,EAAoC5P,UAApC,CAAhB;aANF,MAOO;kCACamC,SAASgO,QAAT,CAAkBP,WAAlB,CAAlB;8BACgBzN,SAAS6L,OAAT,CAAiB4B,WAAjB,CAAhB;;;gBAGIQ,SAASC,GAAGC,UAAH,CAAcT,aAAd,CAAf;8CACcrQ,IAAd,EAAoBQ,UAApB;;gBAEEoQ,SAASC,GAAGE,YAAH,CAAgBV,aAAhB,EAA+B,MAA/B,MAA2CF,OAApD,GAA8D,IADhE,EAEE;kBACI,CAACS,MAAL,EAAa;oBACP/P,MAAM0D,IAAN,CAAWkM,SAAf,EAA0B;yBACjBO,IAAP,CAAYrO,SAASyL,OAAT,CAAiBiC,aAAjB,CAAZ;;;gCAGQA,aAAV;;;iBAECY,aAAH,CAAiBZ,aAAjB,EAAgCF,OAAhC;;;;OAxJD;uBAAA,6BA6JWnQ,IA7JX,EA6J4Ba,KA7J5B,EA6J2D;iBACvDb,IAAT,EAAea,KAAf,EAAsBjB,CAAtB;;YACIiB,MAAM0D,IAAN,CAAW+F,KAAf,EAAsB;eACf8E,QAAL,CAAc;0BAAA,0BACG8B,YADH,EACiB;kBAEzBA,aAAarR,IAAb,CAAkB2J,MAAlB,CAAyBpJ,IAAzB,KAAkCS,MAAM+E,aAAN,CAAoBC,GAAtD,IACAhF,MAAMiH,kBAAN,CAAyBiI,OAAzB,CAAiCmB,aAAarR,IAAb,CAAkB2J,MAAnD,MACE,CAAC,CAHL,EAIE;8BACc0H,YAAd;;;WAPN;;OAhKG;sBA6KS;aAAA,iBACRlR,IADQ,EACSa,KADT,EACwC;;cAEhDb,KAAK0N,OAAL,CAAJ,EAAmB;;;;cAGf;gBACE9N,EAAE6J,YAAF,CAAezJ,KAAKH,IAAL,CAAU2J,MAAzB,CAAJ,EAAsC;sBAC5BxJ,KAAKH,IAAL,CAAU2J,MAAV,CAAiBpJ,IAAzB;qBACOS,MAAM+E,aAAN,CAAoBC,GAAzB;qBACKhF,MAAM+E,aAAN,CAAoBuL,SAAzB;;yBACOvI,UAAL,CAAgB,SAAhB,EAA2B,WAA3B;wBACMqC,QAAQ5I,SACZsI,4BAAkB3K,IAAlB,EAAwBJ,CAAxB,CADY,EAEZiB,MAAM0D,IAAN,CAAWjC,SAFC,EAGZzB,MAAM0D,IAAN,CAAWhC,WAHC,EAIZ1B,MAAMc,IAAN,CAAW4C,IAAX,CAAgB/B,QAJJ,CAAd;;wBAMIyI,KAAJ,EAAW;2BACJpL,IAAL,CAAU0J,SAAV,CAAoB/H,IAApB,CAAyB5B,EAAEmC,aAAF,YAAyBkJ,KAAzB,OAAzB;;;;;qBAICpK,MAAM+E,aAAN,CAAoBwL,YAAzB;sBAEIvQ,MAAM0D,IAAN,CAAWmC,SAAX,KAAyB,IAAzB,IACA1G,KAAKH,IAAL,CAAU8G,GAAV,KAAkB1F,SAFpB,EAGE;yBACKpB,IAAL,CAAU0J,SAAV,CAAoB/H,IAApB,CACE5B,EAAEmC,aAAF,CAAgBiD,cAAchF,KAAKH,IAAL,CAAU8G,GAAV,CAAcC,KAA5B,EAAmC/F,KAAnC,CAAhB,CADF;;;;;;gBAQLjB,EAAE0J,gBAAF,CAAmBtJ,KAAKH,IAAL,CAAU2J,MAA7B,KACCxJ,KAAKH,IAAL,CAAU2J,MAAV,CAAiBA,MAAjB,CAAwBpJ,IAAxB,KAAiCS,MAAM+E,aAAN,CAAoByL,MADvD,IAECzR,EAAEsJ,kBAAF,CAAqBlJ,KAAKH,IAAL,CAAU2J,MAA/B,KACC5J,EAAE6J,YAAF,CAAezJ,KAAKH,IAAL,CAAU2J,MAAV,CAAiBE,MAAhC,CADD,IAEC1J,KAAKH,IAAL,CAAU2J,MAAV,CAAiBE,MAAjB,CAAwBtJ,IAAxB,KAAiCS,MAAM+E,aAAN,CAAoByL,MALzD,EAME;kBACM9P,aAAa3B,EAAE0J,gBAAF,CAAmBtJ,KAAKH,IAAL,CAAU2J,MAA7B,IACfxJ,KAAKH,IAAL,CAAU2J,MAAV,CAAiBA,MADF,GAEfxJ,KAAKH,IAAL,CAAU2J,MAAV,CAAiBE,MAFrB;mBAGK1C,WAAL,CACE2C,gCAAgC3J,IAAhC,EAAsCa,KAAtC,EAA6CU,UAA7C,EAAyD3B,CAAzD,CADF;;kBAIIiB,MAAM0D,IAAN,CAAW+F,KAAf,EAAsB;8BACNtK,IAAd;;;WA5CN,CA+CE,OAAOoL,CAAP,EAAU;kBACJpL,KAAKO,mBAAL,CAAyB6K,CAAzB,CAAN;WArDkD;;;eAwD/CsC,OAAL,IAAgB,IAAhB;SAzDY;YAAA,gBA2DT1N,IA3DS,EA2DQa,KA3DR,EA2DuC;cAC/C;gBAEAb,KAAKH,IAAL,CAAU2J,MAAV,IACAxJ,KAAKH,IAAL,CAAU2J,MAAV,CAAiBH,QADjB,IAEArJ,KAAKH,IAAL,CAAU2J,MAAV,CAAiBH,QAAjB,CAA0BjJ,IAA1B,KAAmC,eAHrC,EAIE;kBACIJ,KAAKH,IAAL,CAAU0J,SAAV,CAAoB1F,MAApB,KAA+B,CAAnC,EAAsC;qBAC/BhE,IAAL,CAAU0J,SAAV,CAAoB/H,IAApB,CACE5B,EAAEgN,gBAAF,CAAmB,CACjBlB,0BAA0B1L,IAA1B,EAAgCa,KAAhC,EAAuCjB,CAAvC,CADiB,CAAnB,CADF;;;WAPN,CAcE,OAAOwL,CAAP,EAAU;kBACJpL,KAAKO,mBAAL,CAAyB6K,CAAzB,CAAN;;;OAxPC;8BAAA,oCA4PkBpL,IA5PlB,EA4PmCa,KA5PnC,EA4PkE;;YAEnEb,KAAK0N,OAAL,CAAJ,EAAmB;;SAFoD;;;aAMlEA,OAAL,IAAgB,IAAhB;;;UAGIxE,kBAAF,CAAqBlJ,KAAKH,IAAL,CAAUsJ,GAA/B,KACAnJ,KAAKH,IAAL,CAAUsJ,GAAV,CAAcO,MAAd,CAAqBtJ,IAArB,KAA8BS,MAAM+E,aAAN,CAAoByL,MAHpD,EAIE;eACKrK,WAAL,CACEoC,0BACEpJ,KAAKH,IAAL,CAAUsJ,GAAV,CAAcO,MADhB,EAEE,CAAC9J,EAAEmC,aAAF,CAAgB/B,KAAKH,IAAL,CAAUsJ,GAAV,CAAcE,QAAd,CAAuBjJ,IAAvC,CAAD,CAFF,EAGEJ,IAHF,EAIEa,KAJF,EAKE,KALF,EAMEjB,CANF,CADF;SALF,MAeO;UAEH0J,gBAAF,CAAmBtJ,KAAKH,IAAL,CAAUsJ,GAA7B,KACAnJ,KAAKH,IAAL,CAAUsJ,GAAV,CAAcK,MAAd,CAAqBpJ,IAArB,KAA8BS,MAAM+E,aAAN,CAAoByL,MAH7C,EAIL;eACKrK,WAAL,CACEoC,0BACEpJ,KAAKH,IAAL,CAAUsJ,GAAV,CAAcK,MADhB,EAEExJ,KAAKH,IAAL,CAAUsJ,GAAV,CAAcI,SAFhB,EAGEvJ,IAHF,EAIEa,KAJF,EAKE,IALF,EAMEjB,CANF,CADF;SALK,MAeA,IAAIA,EAAE6J,YAAF,CAAezJ,KAAKH,IAAL,CAAUsJ,GAAzB,CAAJ,EAAmC;cAEtCnJ,KAAKH,IAAL,CAAUsJ,GAAV,CAAc/I,IAAd,KAAuBS,MAAM+E,aAAN,CAAoBC,GAA3C,IACAhF,MAAMiH,kBAAN,CAAyBiI,OAAzB,CAAiC/P,KAAKH,IAAL,CAAUsJ,GAA3C,MAAoD,CAAC,CAFvD,EAGE;yCAC6BnJ,IAA7B,EAAmCA,KAAKH,IAAL,CAAUsJ,GAA7C,EAAkDtI,KAAlD,EAAyDjB,CAAzD;WAJF,MAKO,IAAII,KAAKH,IAAL,CAAUsJ,GAAV,CAAc/I,IAAd,KAAuBS,MAAM+E,aAAN,CAAoBuL,SAA/C,EAA0D;yCAE7DnR,IADF,EAEEA,KAAKH,IAAL,CAAUsJ,GAFZ,EAGEtI,KAHF,EAIEjB,CAJF,EAKE,UAAC4D,GAAD,EAAMpD,IAAN,EAAYkD,IAAZ;qCAAmClD,IAAnC,SAA2CkD,IAA3C,WAAqDE,GAArD;aALF,EAME,KANF,EAOE;qBAAM,EAAN;aAPF;WADK,MAUA,IAAIxD,KAAKH,IAAL,CAAUsJ,GAAV,CAAc/I,IAAd,KAAuBS,MAAM+E,aAAN,CAAoBwL,YAA/C,EAA6D;yCAEhEpR,IADF,EAEEA,KAAKH,IAAL,CAAUsJ,GAFZ,EAGEtI,KAHF,EAIEjB,CAJF,EAKEqB,SALF,EAME,IANF,EAOE;qBAAM,EAAN;aAPF;;;;;GArTV;;;;;;;;;;;"}